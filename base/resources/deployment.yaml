kind: Deployment
apiVersion: apps/v1
metadata:
  creationTimestamp: null
  annotations:
    kubernetes.io/description: "Deployment of my-awesome-application"
  labels:
    app.kubernetes.io/component: application
    app.kubernetes.io/name: my-awesome-application
    app.kubernetes.io/part-of: the-application
    app.acampos.local/env: BASE
    app.acampos.local/version: 0.0.0
  name: my-awesome-application
spec:
  minReadySeconds: 0
  paused: true
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector: {}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      creationTimestamp: null
      annotations:
        kubectl.kubernetes.io/default-container: my-app
      labels: {}
    spec:
      activeDeadlineSeconds:
      containers:
        - name: my-app
          args:
            - infinity
          command:
            - sleep
          env:
            - name: APP_NAME
              value: my-awesome-application
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http-alt
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccountName: awesome-application
      terminationGracePeriodSeconds: 30
